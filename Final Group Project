using System;
using System.Collections.Generic;

namespace ContractorManagement
{
    // Contractor Class
    public class Contractor
    {
        public string ContractorName { get; set; }
        public int ContractorNumber { get; set; }
        public string StartDate { get; set; }

        // Constructors
        public Contractor() 
        {
            ContractorName = string.Empty;
            ContractorNumber = 0;
            StartDate = string.Empty;
        }

        public Contractor(string name, int number, string startDate)
        {
            ContractorName = name;
            ContractorNumber = number;
            StartDate = startDate;
        }
    }

    // Subcontractor Class (Derived from Contractor)
    public class Subcontractor : Contractor
    {
        public int Shift { get; set; } // 1 = Day, 2 = Night
        public double HourlyPayRate { get; set; }

        // Constructors
        public Subcontractor() : base()
        {
            Shift = 1;
            HourlyPayRate = 0.0;
        }

        public Subcontractor(string name, int number, string startDate, int shift, double hourlyPayRate)
            : base(name, number, startDate)
        {
            Shift = shift;
            HourlyPayRate = hourlyPayRate;
        }

        // Method to compute pay
        public double ComputePay(double hoursWorked)
        {
            double basePay = hoursWorked * HourlyPayRate;
            if (Shift == 2) // Night shift
            {
                basePay += basePay * 0.03; // 3% shift differential
            }
            return basePay;
        }
    }

    // Main Program
    class Program
    {
        static void Main(string[] args)
        {
            List<Subcontractor> subcontractors = new List<Subcontractor>();
            string addMore = "y";

            while (addMore.ToLower() == "y")
            {
                Console.WriteLine("Enter Contractor Name: ");
                string name = Console.ReadLine();

                Console.WriteLine("Enter Contractor Number: ");
                int number = int.Parse(Console.ReadLine());

                Console.WriteLine("Enter Start Date (e.g., MM/DD/YYYY): ");
                string startDate = Console.ReadLine();

                Console.WriteLine("Enter Shift (1 = Day, 2 = Night): ");
                int shift = int.Parse(Console.ReadLine());

                Console.WriteLine("Enter Hourly Pay Rate: ");
                double payRate = double.Parse(Console.ReadLine());

                // Create subcontractor object and add to the list
                Subcontractor subcontractor = new Subcontractor(name, number, startDate, shift, payRate);
                subcontractors.Add(subcontractor);

                Console.WriteLine("Do you want to add another subcontractor? (y/n): ");
                addMore = Console.ReadLine();
            }

            // Display subcontractor details and compute pay
            Console.WriteLine("\nSubcontractor Details:");
            foreach (var subcontractor in subcontractors)
            {
                Console.WriteLine($"\nSubcontractor Name: {subcontractor.ContractorName}");
                Console.WriteLine($"Contractor Number: {subcontractor.ContractorNumber}");
                Console.WriteLine($"Start Date: {subcontractor.StartDate}");
                Console.WriteLine($"Shift: {(subcontractor.Shift == 1 ? "Day" : "Night")}");
                Console.WriteLine($"Hourly Pay Rate: ${subcontractor.HourlyPayRate}");

                Console.WriteLine("Enter hours worked for this subcontractor: ");
                double hoursWorked = double.Parse(Console.ReadLine());

                Console.WriteLine($"Total Pay: ${subcontractor.ComputePay(hoursWorked):F2}");
            }
        }
    }
}
